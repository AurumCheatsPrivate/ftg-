from asyncio import sleep 
from .. import loader, utils 
 
def register(cb): 
 cb(–ë–µ—Å–∏–ª–∫–∞Mod()) 
  
class –ë–µ—Å–∏–ª–∫–∞Mod(loader.Module): 
 """–í–∑–±–µ—Å–∏—Ç –ª—é–±–æ–≥–æ —Ç–µ–≥–∞—è –∏ —É–¥–∞–ª—è—è —Å–º—Å.""" 
 strings = {'name': '–ë–µ—Å–∏–ª–∫–∞'} 
 def init(self): 
  self.name = self.strings['name'] 
  self._me = None 
  self._ratelimit = [] 
   
 async def –≤–∑–±–µ—à—Écmd(self, message): 
  """.–≤–∑–±–µ—à—É <–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ> <—Ä–µ–ø–ª–∞–π –Ω–∞ —Ç–æ–≥–æ, –∫–æ–≥–æ –≤—ã–±–µ—Å–∏—Ç—å>""" 
  reply = await message.get_reply_message() 
  if not reply: 
   await message.edit("<b>–ê –∫–æ–≥–æ –±–µ—Å–∏—Ç—å —Ç–æ ?</b>") 
   return 
  id = reply.from_id 
  args = utils.get_args(message) 
  count = 50 
  if args: 
   if args[0].isdigit(): 
    if int(args[0]) < 0: 
     count = 50 
    else: 
     count = int(args[0]) 
  txt = '<a href="tg://user?id={}">üåö–∏–¥–∏ —Å—é–¥–∞ –ø—ë—Å</a>'.format(id) 
  await message.delete() 
  for _ in range(count): 
   await sleep(0.5) 
   msg = await message.client.send_message(message.to_id, txt) 
   await sleep(0.5) 
   await msg.delete()
